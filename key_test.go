package poolpi

import (
	"testing"

	"github.com/stretchr/testify/require"
)

func TestEncodeKey(t *testing.T) {
	for key, expected := range map[Key]string{
		KeyMinus:   "[10 02] [00 03] [10 00 00 00 00 10 00 00 00 00] [00 35] [10 03]",
		KeyPlus:    "[10 02] [00 03] [20 00 00 00 20 00 00 00] [00 55] [10 03]",
		KeyHeater:  "[10 02] [00 03] [00 00 04 00 00 00 04 00] [00 1d] [10 03]",
		KeyService: "[10 02] [00 03] [08 00 00 00 08 00 00 00] [00 25] [10 03]",
		KeyMenu:    "[10 02] [00 03] [02 00 00 00 02 00 00 00] [00 19] [10 03]",
		KeyRight:   "[10 02] [00 03] [01 00 00 00 01 00 00 00] [00 17] [10 03]",
		KeyLeft:    "[10 02] [00 03] [04 00 00 00 04 00 00 00] [00 1d] [10 03]",
		KeyPoolSpa: "[10 02] [00 03] [40 00 00 00 40 00 00 00] [00 95] [10 03]",
		KeyFilter:  "[10 02] [00 03] [80 00 00 00 80 00 00 00] [01 15] [10 03]",
		KeyLights:  "[10 02] [00 03] [00 01 00 00 00 01 00 00] [00 17] [10 03]",
		KeyValve3:  "[10 02] [00 03] [00 00 01 00 00 00 01 00] [00 17] [10 03]",
		KeyValve4:  "[10 02] [00 03] [00 00 02 00 00 00 02 00] [00 19] [10 03]",
		KeyAux1:    "[10 02] [00 03] [00 02 00 00 00 02 00 00] [00 19] [10 03]",
		KeyAux2:    "[10 02] [00 03] [00 04 00 00 00 04 00 00] [00 1d] [10 03]",
		KeyAux3:    "[10 02] [00 03] [00 08 00 00 00 08 00 00] [00 25] [10 03]",
		KeyAux4:    "[10 02] [00 03] [00 10 00 00 00 00 10 00 00 00] [00 35] [10 03]",
		KeyAux5:    "[10 02] [00 03] [00 20 00 00 00 20 00 00] [00 55] [10 03]",
		KeyAux6:    "[10 02] [00 03] [00 40 00 00 00 40 00 00] [00 95] [10 03]",
	} {
		key, expected := key, expected // make lexical
		t.Run(key.String(), func(t *testing.T) {
			got := key.ToEvent().Format(FormatHex)
			require.Equal(t, expected, got)
		})
	}
}
